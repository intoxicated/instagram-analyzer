@import "mixins/flex";

@mixin common_margin{
  margin: 0 $common_spaceing;
}

@mixin common_padding{
  padding: 0 $common_spaceing;
}

@mixin mobile{
  @media only screen and (min-width: 320px) and (max-width: #{$min_tablet_width - 1px}) {
    @content;
  }
}

@mixin min-tablet{
  @media only screen and (min-width: $min_tablet_width) and (max-width: #{$medium_tablet_width - 1px}) {
    @content;
  }
}

@mixin medium-tablet{
  @media only screen and (min-width: $medium_tablet_width) and (max-width: #{$desktop_width - 1px}) {
    @content;
  }
}

@mixin desktop{
  @media only screen and (min-width: $desktop_width) {
    @content;
  }
}

@mixin retina {
  @media only screen and (-webkit-min-device-pixel-ratio: 2),
  only screen and (min--moz-device-pixel-ratio: 2),
  only screen and (-o-min-device-pixel-ratio: 2/1),
  only screen and (min-device-pixel-ratio: 2),
  only screen and (min-resolution: 192dpi),
  only screen and (min-resolution: 2dppx) {
    @content;
  }
}

@mixin z-index($layer) {
  z-index: z($layer);
}

@mixin border_box{
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  box-sizing: border-box;
}

@mixin icon($url, $width, $height){
  display: inline-block;
  width: $width;
  height: $height;
  background-image: url($url);
  -webkit-background-size: cover;
  background-size: cover;
  background-position: 0 0;
  background-repeat: no-repeat;
}

@mixin font_size($font-size, $light-height: false){
  @if not $light-height{
    $light-height: $font-size;
  }

  font-size: $font-size;
  line-height: $light-height;
}

@mixin border-radius($value){
  border-radius: $value;
  -o-border-radius: $value;
  -ms-border-radius: $value;
  -moz-border-radius: $value;
  -webkit-border-radius: $value;
}

@mixin black_screen_layer($position: false){
  @if not $position{
    $position: fixed;
  }

  position: $position;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  background-color: rgba(0, 0, 0, .8);
  z-index: 1;
}

@mixin comfirm_buttons($height: false, $yes_btn_color: false, $no_btn_color: false){
  @if not $height{
    $height: 6rem;
  }

  @if not $yes_btn_color{
    $yes_btn_color: rgb(255, 89, 89);
  }

  @if not $no_btn_color{
    $no_btn_color: rgb(121, 128, 143);
  }

  .buttons{
    @include flexbox;
    @include flex-direction(row);
    height: $height;

    .button{
      @include font_size(2.6rem);
      color: white;
    }

    .yes{
      @extend .button;
      @include flex(1);
      background-color: $yes_btn_color;
      border-bottom-right-radius: 4px;
    }

    .no{
      @extend .button;
      @include flex(1);
      background-color: $no_btn_color;
      border-bottom-left-radius: 4px;
    }
  }
}

@mixin word_break{
  word-break: break-all;
  word-break: keep-all;
}

@mixin comfirm_change_color($case1_class, $case1_color, $case2_class, $case2_color){
  &.#{$case1_class}{
    .list{
      background-color: $case1_color;
    }

    .buttons{
      .yes{
        background-color: $case1_color;
      }
    }
  }

  &.#{$case2_class}{
    .list{
      .last_call{
        background-color: $case2_color;
      }
    }

    .buttons{
      .yes{
        background-color: $case2_color;
      }
    }
  }
}

@mixin input_placeholder($font_size, $color, $font_weight){
  &::-webkit-input-placeholder { /* WebKit, Blink, Edge */
    color:    $color;
    font-weight: $font_weight;
    font-size: $font_size;
  }

  &:-moz-placeholder { /* Mozilla Firefox 4 to 18 */
    color:    $color;
    font-weight: $font_weight;
    opacity:  1;
    font-size: $font_size;
  }

  &::-moz-placeholder { /* Mozilla Firefox 19+ */
    color:    $color;
    font-weight: $font_weight;
    opacity:  1;
    font-size: $font_size;
  }

  &:-ms-input-placeholder { /* Internet Explorer 10-11 */
    color:    $color;
    font-weight: $font_weight;
    font-size: $font_size;
  }
}

@mixin text_ellipsis(){
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  -ms-text-overflow: ellipsis;
  -o-text-overflow: ellipsis;
  -webkit-text-overflow: ellipsis;
  -moz-text-overflow: ellipsis;
}

@mixin transform($value){
  transform: $value;
  -ms-transform: $value;
  -o-transform: $value;
  -webkit-transform: $value;
  -moz-transform: $value;
}

@mixin transition($value){
  transition: $value;
  -ms-transition: $value;
  -o-transition: $value;
  -webkit-transition: $value;
  -moz-transition: $value;
}

@mixin transition-duration($value) {
  transition-duration: $value;
  -ms-transition-duration: $value;
  -o-transition-duration: $value;
  -webkit-transition-duration: $value;
  -moz-transition-duration: $value;
}

@mixin transition-timing-function($value){
  transition-timing-function: $value;
  -ms-transition-timing-function: $value;
  -o-transition-timing-function: $value;
  -webkit-transition-timing-function: $value;
  -moz-transition-timing-function: $value;
}

@mixin animation-duration($value){
  animation-duration: $value;
  -o-animation-duration: $value;
  -ms-animation-duration: $value;
  -webkit-animation-duration: $value;
  -moz-animation-duration: $value;
}

@mixin animation-iteration-count($value) {
  animation-iteration-count: $value;
  -o-animation-iteration-count: $value;
  -ms-animation-iteration-count: $value;
  -webkit-animation-iteration-count: $value;
  -moz-animation-iteration-count: $value;
}

@mixin animation-direction($value) {
  animation-direction: $value;
  -o-animation-direction: $value;
  -ms-animation-direction: $value;
  -webkit-animation-direction: $value;
  -moz-animation-direction: $value;
}

@mixin animation-name($value) {
  animation-name: $value;
  -o-animation-name: $value;
  -ms-animation-name: $value;
  -webkit-animation-name: $value;
  -moz-animation-name: $value;
}

@mixin animation-delay($value) {
  animation-delay: $value;
  -o-animation-delay: $value;
  -ms-animation-delay: $value;
  -webkit-animation-delay: $value;
  -moz-animation-delay: $value;
}

@mixin animation-fill-mode($value){
  animation-fill-mode: $value;
  -o-animation-fill-mode: $value;
  -ms-animation-fill-mode: $value;
  -webkit-animation-fill-mode: $value;
  -moz-animation-fill-mode: $value;
}

@mixin animation-timing-function($value) {
  animation-timing-function: $value;
  -o-animation-timing-function: $value;
  -ms-animation-timing-function: $value;
  -webkit-animation-timing-function: $value;
  -moz-animation-timing-function: $value;
}

@mixin keyframes($name){
  @keyframes #{$name} {
    @content;
  }

  @-moz-keyframes #{$name} {
    @content;
  }

  @-webkit-keyframes #{$name} {
    @content;
  }

  @-o-keyframes #{$name} {
    @content;
  }
}

@mixin position_center($position: false){
  @if not $position{
    $position: absoulte;
  }

  position: $position;
  top: 50%;
  left: 50%;
  @include transform(translate(-50%, -50%));
}

@mixin portrait{
  @media (orientation: portrait) {
    @content;
  }
}

@mixin black_screen($opacity: false){
  @if not $opacity{
    $opacity: .6;
  }

  background-color: rgba(0, 0, 0, $opacity);
}

@mixin transition($value){
  transition: $value;
  -moz-transition: $value;
  -ms-transition: $value;
  -o-transition: $value;
  -webkit-transition: $value;
}

@mixin transition-duration($value){
  transition-duration: $value;
  -moz-transition-duration: $value;
  -ms-transition-duration: $value;
  -o-transition-duration: $value;
  -webkit-transition-duration: $value;
}

@mixin transition-delay($value) {
  transition-delay: $value;
  -moz-transition-delay: $value;
  -ms-transition-delay: $value;
  -o-transition-delay: $value;
  -webkit-transition-delay: $value;
}

@mixin user-select($value){
  -webkit-user-select: $value;
  -moz-user-select: $value;
  -ms-user-select: $value;
  user-select: $value;
}
